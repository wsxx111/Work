using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace DesignMethod.原型模式
{
    #region  解析
    /*    
     * 原型模式是用于创建重复的对象，同时又能保证性能。这种类型设计模式属于创建型模式，它提供了一种创建对象的最佳方式。
     * 这种模式是实现了一个原型接口，该接口用于创建当前对象的克隆，在下一个请求时返回它的克隆体，在需要的时候更新数据库，以此来减少数据库的调用。
     * 
     * 优点:1、性能提高。
     *      2、逃避构造函数的约束。
     * 缺点： 1、配备克隆方法需要对类的功能进行通盘考虑，这对于全新的类不是很难，但对于已有的类不一定很容易，
     *          特别当一个类引用不支持串行化的间接对象，或者引用含有循环结构的时候。 
     *        2、必须实现 Cloneable 接口。 
     *        3、逃避构造函数的约束。 
     * 
     * */

    #endregion

    //客户端调用
    public class 测试类
    {
        public static void 运行()
        {

            Console.ReadKey();
        }
    }


    //----------------------------------------------------------------------------------------


    public class 信息
    { 
    
    }

  
}
